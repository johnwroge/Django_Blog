name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12, 3.13]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r blog_project/requirements.txt
    
    - name: Create test environment file
      run: |
        cd blog_project
        echo "SECRET_KEY='test-secret-key-for-github-actions'" > .env
        echo "DEBUG=True" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env
    
    - name: Run Django system checks
      run: |
        cd blog_project
        python manage.py check
    
    - name: Run migrations
      run: |
        cd blog_project
        python manage.py migrate
    
    - name: Run tests
      run: |
        cd blog_project
        python manage.py test --verbosity=2
    
    - name: Run security checks
      run: |
        cd blog_project
        python manage.py check --deploy --fail-level=WARNING
    
    - name: Generate coverage report (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        cd blog_project
        pip install coverage
        coverage run --source='.' manage.py test
        coverage report
        coverage xml
    
    - name: Upload coverage to Codecov (Python 3.11 only)
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./blog_project/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run Black formatter check
      run: |
        cd blog_project
        black --check .
    
    - name: Run isort import sorting check
      run: |
        cd blog_project
        isort --check-only .
    
    - name: Run flake8 linting
      run: |
        cd blog_project
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-line-length=88 --statistics